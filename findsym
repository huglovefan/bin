#!/usr/bin/luajit
--
-- find the library a symbol is defined in
--

local cachefile = string.format('%s/.cache/symbols', os.getenv('HOME'))

local shellquote = function (s)
	return '\'' .. s:gsub('\'', '\'\\\'\'') .. '\''
end

local generate_sh = [==[

export R=/tmp/findsym.$$
mkdir "$R" || exit
cleanup() {
	if [ -n "$R" ]; then
		rm -rf "$R"
		R=
	fi
}
trap 'cleanup' EXIT
trap 'exit 1' HUP INT TERM

export AWK_CMD='
	$3!="0"&&($4=="FUNC"||$4=="OBJECT")&&$5=="GLOBAL"&&$6!="HIDDEN"&&($7!="ABS"&&$7!="UND") {
		sub(/^[ ]+[^ ]+[ ]+[^ ]+[ ]+[^ ]+[ ]+[^ ]+[ ]+[^ ]+[ ]+[^ ]+[ ]+[^ ]+[ ]+/, "s");
		sub(/@.*/, "");
		print;
		next;
	}
	/^!f/ {
		print(substr($0, 2));
		next;
	}
'

find \
	/lib* \
	/usr/lib* \
	/usr/local/lib* \
\( \
	-name 'lib?*.so' -or \
	-name 'lib?*.so.[0-9]*' -or \
	-name 'lib?*.a' \
\) -not -name '*.debug' -type f -print0 | xargs -0 -P 3 -n 64 -r /bin/sh -c '
for f; do
	>&2 printf "%s\n" "$f"
	printf "!f%s\n" "$f"
	case $f in
	*.so.[0-9]*|*.so)
		llvm-readelf -W --demangle --dyn-syms "$f"
		;;
	*.a)
		llvm-readelf -W --demangle --syms "$f"
		;;
	esac
done | awk "$AWK_CMD" >>"$R/$$"
' --

cat /tmp/findsym.$$/* | awk '!t[$0]++' >]==]..shellquote(cachefile)..'\n'..[==[

]==]

if arg[1] == '-g' then
	os.execute(generate_sh)
	if #arg == 1 then os.exit(0) end
	arg = {select(2, unpack(arg))}
end
if #arg ~= 1 then
	io.stderr:write('usage: findsym [-g] <pattern>\n')
	os.exit(1)
end

-- approximately convert a shell glob to lua pattern
-- i don't like this but no other terminal command uses lua patterns
local glob2pat = function (glob)
	local t = {}
	local i = 1
	if not glob:find('^%*') then
		t[1] = '^'
	end
	if glob:find('%*$') then
		t.laststar = true
	end
	while i <= #glob do
		local c = glob:sub(i, i)
		if c == '%' then
			t[#t+1] = '%%'
		elseif c == '*' then
			if i > 1 and i < #glob then
				t[#t+1] = '.*'
			end
		elseif c == '?' then
			t[#t+1] = '.'
		elseif c == '[' then
			i = i + 1
			t[#t+1] = '['
			if glob:sub(i, i) == '!' then
				i = i + 1
				t[#t+1] = '^'
			end
			while true do
				local c = glob:sub(i, i)
				assert(c, 'unterminated character class')
				if c == '%' then
					t[#t+1] = '%%'
				elseif c == '\\' then
					t[#t+1] = '%'
					t[#t+1] = glob:sub(i+1, i+1)
					i = i + 1
				elseif c == ']' then
					t[#t+1] = ']'
					break
				else
					t[#t+1] = glob:sub(i, i)
				end
				i = i + 1
			end
		elseif c == '\\' then
			t[#t+1] = '%'
			t[#t+1] = glob:sub(i+1, i+1)
			i = i + 1
		else
			t[#t+1] = c
		end
		i = i + 1
	end
	if not t.laststar then
		t[#t+1] = '$'
	end
	return table.concat(t, '')
end

local es = string.byte('s')
local ef = string.byte('f')

local f = assert(io.open(cachefile, "r"))
local file = nil
local pat = glob2pat(arg[1])
for line in f:lines() do
	if line:byte(1) == es then
		if line:find(pat, 2) then
			print(file:sub(2), line:sub(2))
		end
	elseif line:byte(1) == ef then
		file = line
	end
end
f:close()
